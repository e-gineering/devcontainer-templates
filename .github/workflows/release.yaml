name: "Release Dev Container Templates & Generate Documentation"
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build images
      #   uses: devcontainers/ci@v0.3
      #   # Options: https://github.com/devcontainers/ci/blob/main/action.yml
      #   with:
      #     imageName: ghcr.io/${{ github.repository }}/fabric-runtime
      #     cacheFrom: ghcr.io/${{ github.repository }}/fabric-runtime
      #     imageTag: 1.2
      #     push: always
      #     subFolder: src/fabric-runtime

      - name: "Publish Templates"
        uses: devcontainers/action@v1
        with:
          publish-templates: "true"
          base-path-to-templates: "./src"
          generate-docs: "true"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR for Documentation
        id: push_image_info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          echo "Start."

          # Configure git and Push updates
          git config --global user.email github-actions[bot]@users.noreply.github.com
          git config --global user.name github-actions[bot]
          git config pull.rebase false

          branch=automated-documentation-update-$GITHUB_RUN_ID
          git checkout -b $branch
          message='Automated documentation update'

          # Add / update and commit
          git add */**/README.md
          git commit -m 'Automated documentation update [skip ci]' || export NO_UPDATES=true

          # Push
          if [ "$NO_UPDATES" != "true" ] ; then
              git push origin "$branch"
              gh pr create --title "$message" --body "$message"
          fi
